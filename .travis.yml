os:
  - linux
  - osx

sudo: required
dist: trusty
osx_image: xcode10

language: node_js
node_js: 8

services:
  - docker

env:
  global:
    - ELECTRON_CACHE=$HOME/.cache/electron
    - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder

before_cache:
  - rm -rf $HOME/.cache/electron-builder/wine

cache:
  yarn: true
  directories:
    - node_modules
    - $HOME/.cache/electron
    - $HOME/.cache/electron-builder

before_script:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export DISPLAY=:99.0; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sh -e /etc/init.d/xvfb start; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sleep 3; fi

after_failure:
  - curl -sL https://raw.githubusercontent.com/travis-ci/artifacts/master/install | bash
  - artifacts upload $(git ls-files -o | grep -Fv -e node_modules -e dist -e app -e e2e)
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then artifacts upload /*.log); fi

before_install:
  - node --version
  - yarn --version

install:
  - yarn --frozen-lockfile

stages:
  - lint
  - test
  - e2e
  - deploymac
  - deploylinuxwin

jobs:
  include:
    - stage: lint
      if: os = linux
      script: yarn commitlint-travis
    - script: yarn lint
    - stage: test
      script: yarn test
    - stage: e2e
      os: osx
      script: yarn build:prod && yarn e2e
    - stage: deploymac
      if: tag IS present AND os = osx
      name: "Deploy MacOS"
      script: yarn release
    - stage: deploylinuxwin
      if: tag IS present AND os = linux
      name: "Deploy Linux and Windows"
      script:
        - |
          docker run --rm \
            --env-file <(env | grep -vE '\r|\n' | grep -iE 'NAME|DEBUG|NODE_|ELECTRON_|YARN_|NPM_|CI|CSC_|_TOKEN|_KEY|STRIP|BUILD_') \
            --env ELECTRON_CACHE="/root/.cache/electron" \
            --env ELECTRON_BUILDER_CACHE="/root/.cache/electron-builder" \
            -v ${PWD}:/project \
            -v ~/.cache/electron:/root/.cache/electron \
            -v ~/.cache/electron-builder:/root/.cache/electron-builder \
            electronuserland/builder:wine \
            /bin/bash -c "yarn --link-duplicates --pure-lockfile && yarn release --linux --win"

notifications:
  email:
    on_success: never
    on_failure: change
